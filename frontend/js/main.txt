document.addEventListener("DOMContentLoaded", () => {
  const productoInput = document.getElementById("producto");
  const categoryMenu = document.getElementById("categoryMenu");
  const listaProductos = document.getElementById("lista-productos");
  const btnComparar = document.querySelector("#comparar-box .comparar-btn");

  // Mostrar menú de categorías
  productoInput.addEventListener("click", showCategoryMenu);
  productoInput.addEventListener("input", filterCategoryMenu);

  // Cerrar menú si se hace clic fuera
  document.addEventListener("click", e => {
    if (!e.target.closest(".category-dropdown")) {
      categoryMenu.style.display = "none";
    }
  });

  // Comparar productos
  btnComparar.addEventListener("click", compararProductos);


  async function showCategoryMenu() {
    console.log("📥 showCategoryMenu disparado");
    categoryMenu.innerHTML = "";

    try {
      const [resCategorias, resSubcategorias] = await Promise.all([
        fetch("/api/categorias"),
        fetch("/api/subcategorias")
      ]);

      const categories = await resCategorias.json();
      const subcategorias = await resSubcategorias.json();

      console.log("📦 Categorías recibidas:", categories);
      console.log("🧩 Subcategorías recibidas:", subcategorias);

      categories.forEach(cat => {
        const groupDiv = document.createElement("div");
        groupDiv.classList.add("category-group");

        const title = document.createElement("strong");
        title.textContent = cat.categoria_original;
        groupDiv.appendChild(title);

        const subList = document.createElement("ul");
        subList.classList.add("subcategory-list");

        const subcat = subcategorias.find(
          s => s.categoria_normalizada?.trim().toLowerCase() === cat.categoria_normalizada?.trim().toLowerCase()
        );

        const subItems = subcat?.subcategorias || [];

        console.log("🔍 Subcategorías para", cat.categoria_original, "→", subItems);

        subItems.forEach(sub => {
          const item = document.createElement("li");
          item.textContent = sub;
          item.classList.add("subcategory-item");

          item.onclick = () => {
            productoInput.value = sub;
            categoryMenu.style.display = "none";

            // Activar menús dinámicos
            document.getElementById("marca-wrapper").classList.remove("d-none");
            document.getElementById("contenido-wrapper").classList.remove("d-none");
            document.getElementById("variedad-wrapper").classList.remove("d-none");

            // Cargar opciones
            const variedad = document.getElementById("variedad");
            variedad.innerHTML = `<option value="" selected>Todos</option>`;
            ["Clásico", "Integral", "Sin sal"].forEach(op => {
              const opt = document.createElement("option");
              opt.value = op;
              opt.textContent = op;
              variedad.appendChild(opt);
            });

            const contenido = document.getElementById("contenido");
            contenido.innerHTML = `<option value="" selected>Todos</option>`;
            ["500g", "1kg", "2L"].forEach(op => {
              const opt = document.createElement("option");
              opt.value = op;
              opt.textContent = op;
              contenido.appendChild(opt);
            });

            const marca = document.getElementById("marca");
            marca.innerHTML = `<option value="" selected>Todos</option>`;
            ["La Serenísima", "Ilolay", "Sancor"].forEach(op => {
              const opt = document.createElement("option");
              opt.value = op;
              opt.textContent = op;
              marca.appendChild(opt);
            });
          };

          subList.appendChild(item);
        });

        groupDiv.appendChild(subList);
        categoryMenu.appendChild(groupDiv);
      });

      categoryMenu.style.display = "block";
      console.log("✅ Menú desplegable activado");
    } catch (err) {
      console.error("❌ Error al cargar categorías y subcategorías:", err);
    }
  }

  function filterCategoryMenu() {
    const input = productoInput.value
      .normalize("NFD")
      .replace(/[\u0300-\u036f]/g, "")
      .toLowerCase();

    const groups = categoryMenu.querySelectorAll(".category-group");

    groups.forEach(group => {
      const categoryName = group.querySelector("strong")?.textContent || "";
      const normalizedCategory = categoryName
        .normalize("NFD")
        .replace(/[\u0300-\u036f]/g, "")
        .toLowerCase();

      const subItems = group.querySelectorAll(".subcategory-item");

      let matchFound = normalizedCategory.includes(input);

      subItems.forEach(item => {
        const normalizedText = item.textContent
          .normalize("NFD")
          .replace(/[\u0300-\u036f]/g, "")
          .toLowerCase();

        const match = normalizedText.includes(input);
        item.style.display = match ? "" : "none";
        if (match) matchFound = true;
      });

      group.style.display = matchFound ? "" : "none";
    });
  }

  function agregarProducto() {
    const nombre = productoInput.value.trim();
    const tipo_de_producto = document.getElementById("tipo-de-producto").value;
    const presentacion = document.getElementById("presentacion").value.trim();

    if (!nombre || !tipo_de_producto) {
      alert("Por favor completá todos los campos.");
      return;
    }

    const item = document.createElement("li");
    item.className = "list-group-item";
    item.textContent = `${nombre} - ${tipo_de_producto}`;
    listaProductos.appendChild(item);

    // Limpiar campos
    productoInput.value = "";
    document.getElementById("tipo-de-producto").selectedIndex = 0;
    document.getElementById("presentacion").value = "";
    categoryMenu.style.display = "none";
  }

function compararProductos() {
  const productos = Array.from(document.querySelectorAll("#productos-a-comparar tr")).map(fila => {
    const celdas = fila.querySelectorAll("td");
    return {
      nombreCompleto: `${celdas[0]?.textContent.trim()} ${celdas[1]?.textContent.trim()} ${celdas[2]?.textContent.trim()} ${celdas[3]?.textContent.trim()}`
    };
  });

  if (productos.length === 0) {
    alert("Agregá al menos un producto para comparar.");
    return;
  }

  const supermercados = Array.from(document.querySelectorAll("#supermercado-buttons .supermercado-btn.selected"))
    .map(btn => {
      const img = btn.querySelector("img");
      const raw = img?.alt?.trim() || "Sin nombre";
      return raw.replace(/^Logo\s*/i, "");
    });

  if (supermercados.length === 0) {
    alert("Seleccioná al menos un supermercado.");
    return;
  }

  // 🔥 Limpiar vista anterior (opcional)
  document.getElementById("tabla-productos")?.remove();
  document.getElementById("tabla-comparacion-wrapper")?.remove();
  document.querySelector("#comparar-box .formulario-productos")?.remove();
  document.querySelector("#comparar-box .listado-productos")?.remove();
  document.querySelector("#supermercado-buttons")?.previousElementSibling?.remove();
  document.querySelector("#comparar-box h5")?.remove();

  // 🧭 Redirigir a la página de comparación
  window.location.href = "/public/productos-comparados.html";
}

function compararProductos() {
  const productos = Array.from(document.querySelectorAll("#productos-a-comparar tr")).map(fila => {
    const celdas = fila.querySelectorAll("td");
    return {
      nombreCompleto: `${celdas[0]?.textContent.trim()} ${celdas[1]?.textContent.trim()} ${celdas[2]?.textContent.trim()} ${celdas[3]?.textContent.trim()}`
    };
  });

  if (productos.length === 0) {
    alert("Agregá al menos un producto para comparar.");
    return;
  }

  const supermercados = Array.from(document.querySelectorAll("#supermercado-buttons .supermercado-btn.selected"))
    .map(btn => {
      const img = btn.querySelector("img");
      const raw = img?.alt?.trim() || "Sin nombre";
      return raw.replace(/^Logo\s*/i, "");
    });

  if (supermercados.length === 0) {
    alert("Seleccioná al menos un supermercado.");
    return;
  }

  // 🧠 Guardar datos en sessionStorage
  sessionStorage.setItem("productosComparados", JSON.stringify(productos));
  sessionStorage.setItem("supermercadosSeleccionados", JSON.stringify(supermercados));

  // 🧭 Redirigir a la página de comparación
  window.location.href = "/public/productos-comparados.html";
}

document.addEventListener("DOMContentLoaded", () => {
  const esVistaFiltros = document.querySelector("#productos-a-comparar");

  if (!esVistaFiltros) return; // No ejecutar si no estamos en la vista de filtros

  const supermercados = JSON.parse(sessionStorage.getItem("supermercadosSeleccionados") || "[]");
  const productos = JSON.parse(sessionStorage.getItem("productosComparados") || "[]");

  // 🧭 Restaurar supermercados seleccionados
  supermercados.forEach(nombre => {
    const btns = Array.from(document.querySelectorAll(".supermercado-btn"));
    btns.forEach(btn => {
      const img = btn.querySelector("img");
      const raw = img?.alt?.trim() || "";
      const nombreBtn = raw.replace(/^Logo\s*/i, "");
      if (nombreBtn === nombre) {
        btn.classList.add("selected");
      }
    });
  });

  // 🧮 Restaurar productos en la tabla
  const tbody = document.querySelector("#productos-a-comparar tbody");
  if (tbody && productos.length > 0) {
    productos.forEach(prod => {
      const fila = document.createElement("tr");
      fila.innerHTML = `<td colspan="4">${prod.nombreCompleto}</td>`;
      tbody.appendChild(fila);
    });
  }
});


function crearTablaComparacion() {
  if (document.getElementById("productos-a-comparar")) return;

  const wrapper = document.createElement("div");
  wrapper.id = "tabla-comparacion-wrapper";
  wrapper.className = "mt-4";

  wrapper.innerHTML = `
    <h5>📊 Productos seleccionados para comparar</h5>
    <div class="tabla-a-comparar-scroll">
      <table class="table tabla-a-comparar mb-0">
        <thead>
          <tr>
            <th>Producto</th>
            <th>Marca</th>
            <th>Contenido</th>
            <th>Variedad</th>
            <th></th>
          </tr>
        </thead>
        <tbody id="productos-a-comparar"></tbody>
      </table>
    </div>
  `;

  const compararBox = document.getElementById("comparar-box");
  compararBox.parentNode.insertBefore(wrapper, compararBox);
}

document.addEventListener("click", e => {
  // ➕ Agregar
  if (e.target.matches("button.btn-success")) {
    const btn = e.target;
    const filaOriginal = btn.closest("tr");
    const id = btn.dataset.id;

    if (document.querySelector(`#productos-a-comparar tr[data-id="${id}"]`)) return;

    crearTablaComparacion();

    const filaClonada = filaOriginal.cloneNode(true);
    filaClonada.setAttribute("data-id", id);

    const btnEliminar = filaClonada.querySelector("button");
    btnEliminar.textContent = "🗑 Eliminar";
    btnEliminar.className = "btn btn-danger btn-sm eliminar-btn";
    btnEliminar.disabled = false;

    document.querySelector("#productos-a-comparar").appendChild(filaClonada);
    btn.disabled = true;
  }

  // 🗑 Eliminar
  if (e.target.matches("button.eliminar-btn")) {
    const fila = e.target.closest("tr");
    const id = fila.dataset.id;
    fila.remove();

    const btnOriginal = document.querySelector(`button.btn-success[data-id="${id}"]`);
    if (btnOriginal) btnOriginal.disabled = false;

    const compararBody = document.getElementById("productos-a-comparar");
    if (compararBody && compararBody.children.length === 0) {
      document.getElementById("tabla-comparacion-wrapper")?.remove();
    }
  }
});

});

document.getElementById("tipo-de-producto").addEventListener("change", e => {
  const tipoSeleccionado = e.target.value;
  if (!tipoSeleccionado) return;

  const tablaExistente = document.getElementById("tabla-productos");
  if (tablaExistente) tablaExistente.remove(); // Evita duplicados

  const tablaWrapper = document.createElement("div");
  tablaWrapper.id = "tabla-productos";
  tablaWrapper.style.maxHeight = "400px";
  tablaWrapper.style.overflowY = "auto";
  tablaWrapper.style.marginTop = "20px";
  tablaWrapper.style.border = "1px solid #ccc";
  tablaWrapper.style.borderRadius = "8px";

  const tabla = document.createElement("table");
  tabla.className = "table table-striped mb-0";

  const thead = document.createElement("thead");
  thead.innerHTML = `
    <tr>
      <th>Producto</th>
      <th>Marca</th>
      <th>Contenido</th>
      <th>Variedad</th>
      <th></th>
    </tr>
  `;
  tabla.appendChild(thead);

  const tbody = document.createElement("tbody");

  for (let i = 1; i <= 40; i++) {
    const id = `mock-${i}`; // ID trazable

    const fila = document.createElement("tr");
    fila.setAttribute("data-id", id);

    const producto = `Producto ${i}`;
    const marca = ["La Serenísima", "Ilolay", "Sancor"][i % 7];
    const contenido = i % 2 === 0 ? "500g" : "1kg";
    const variedad = ["Clásico", "Integral", "Sin sal"][i % 3];

    fila.innerHTML = `
      <td>${producto}</td>
      <td>${marca}</td>
      <td>${contenido}</td>
      <td>${variedad}</td>
      <td><button class="btn btn-success btn-sm" data-id="${id}">➕ Agregar</button></td>
    `;

    tbody.appendChild(fila);
  }

  tabla.appendChild(tbody);
  tablaWrapper.appendChild(tabla);

  const compararBox = document.getElementById("comparar-box");
  compararBox.parentNode.insertBefore(tablaWrapper, compararBox);
});

const filtroMarca = document.getElementById("marca");
const filtroContenido = document.getElementById("contenido");
const filtroVariedad = document.getElementById("variedad");

[filtroMarca, filtroContenido, filtroVariedad].forEach(filtro => {
  filtro.addEventListener("change", aplicarFiltros);
});

function aplicarFiltros() {
  const marca = filtroMarca.value;
  const contenido = filtroContenido.value;
  const variedad = filtroVariedad.value;

  const filas = document.querySelectorAll("#tabla-productos tbody tr");

  filas.forEach(fila => {
    const celdas = fila.querySelectorAll("td");
    const marcaTexto = celdas[1]?.textContent.trim();
    const contenidoTexto = celdas[2]?.textContent.trim();
    const variedadTexto = celdas[3]?.textContent.trim();

    const coincideMarca = !marca || marcaTexto === marca;
    const coincideContenido = !contenido || contenidoTexto === contenido;
    const coincideVariedad = !variedad || variedadTexto === variedad;

    fila.style.display = (coincideMarca && coincideContenido && coincideVariedad) ? "" : "none";
  });
}